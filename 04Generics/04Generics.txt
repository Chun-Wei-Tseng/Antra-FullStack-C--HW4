1. Describe the problem generics address.
- Ans: Generics address the problems of type safety, code reuse, and performance. 
       They allow developers to create classes, methods, and data structures with a placeholder for the type 
       of data they store and manipulate, ensuring compile-time type checking and reducing runtime errors.
       Generics also help in avoiding the need for explicit casting and reduce the overhead associated with 
       boxing and unboxing of value types.

2. How would you create a list of strings, using the generic List class?
- Ans: List<string> stringList = new List<string>();

3. How many generic type parameters does the Dictionary class have?
- Ans: The Dictionary class has two generic type parameters: TKey and TValue.

4. True/False. When a generic class has multiple type parameters, they must all match.
- Ans: False.

5. What method is used to add items to a List object?
- Ans: The Add method is used to add items to a List object.

6. Name two methods that cause items to be removed from a List.
- Ans: Remove and RemoveAt methods are used to remove items from a List.

7. How do you indicate that a class has a generic type parameter?
- Ans: You indicate that a class has a generic type parameter by using angle brackets (<>) with a type parameter when defining the class.

8. True/False. Generic classes can only have one generic type parameter.
- Ans: False

9. True/False. Generic type constraints limit what can be used for the generic type.
- Ans: True

10. True/False. Constraints let you use the methods of the thing you are constraining to.
- Ans: True